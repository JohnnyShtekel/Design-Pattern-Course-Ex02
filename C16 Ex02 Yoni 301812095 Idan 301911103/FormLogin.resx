<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ButtonLogin.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>